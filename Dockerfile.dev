# Development Dockerfile for backend
FROM node:18-alpine

# Set working directory
WORKDIR /app

# Install system dependencies and create non-root user
RUN apk add --no-cache postgresql-client dumb-init && \
    addgroup -g 1001 -S nodejs && \
    adduser -S appuser -u 1001 -G nodejs

# Copy package files first for better caching
COPY server/package*.json ./

# Install dependencies (including dev dependencies) with clean cache
RUN npm install --no-audit --no-fund && \
    npm cache clean --force

# Copy source code
COPY server/ ./

# Create necessary directories and set permissions
RUN mkdir -p uploads logs && \
    chown -R appuser:nodejs /app

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 5000

# Health check for development
HEALTHCHECK --interval=30s --timeout=3s --start-period=10s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:5000/health || exit 1

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]

# Start the development server
CMD ["npm", "run", "dev"]